!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/leejunggyun/source_code/spi0/st7735/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
GET_1BITS	gpio.h	/^#define GET_1BITS(/;"	d
GPIO_DCS_HIGH	gpio.h	/^#define GPIO_DCS_HIGH /;"	d
GPIO_DCS_LOW	gpio.h	/^#define GPIO_DCS_LOW /;"	d
GPIO_HIGH	gpio.h	/^    GPIO_HIGH,$/;"	e	enum:__anon0048884a0203
GPIO_LOW	gpio.h	/^    GPIO_LOW,$/;"	e	enum:__anon0048884a0203
GPIO_PIN_A0	gpio.h	/^    GPIO_PIN_A0,   \/* chip select when send data (P8_11, line 13, gpio chip 0) *\/$/;"	e	enum:__anon0048884a0103
GPIO_PIN_LED	gpio.h	/^    GPIO_PIN_LED,      \/* chip reset (P8_14, line 26, gpio chip 3) *\/$/;"	e	enum:__anon0048884a0103
GPIO_PIN_MAX	gpio.h	/^    GPIO_PIN_MAX,$/;"	e	enum:__anon0048884a0103
GPIO_PIN_NAME	gpio.h	/^} GPIO_PIN_NAME;$/;"	t	typeref:enum:__anon0048884a0103
GPIO_PIN_RESET	gpio.h	/^    GPIO_PIN_RESET, \/* chip reset (P8_13, line 23, gpio chip 3) *\/$/;"	e	enum:__anon0048884a0103
GPIO_READ_DREQ	gpio.h	/^#define GPIO_READ_DREQ(/;"	d
GPIO_RESET_HIGH	gpio.h	/^#define GPIO_RESET_HIGH /;"	d
GPIO_RESET_LOW	gpio.h	/^#define GPIO_RESET_LOW /;"	d
GPIO_ROUTE	gpio.h	/^#define GPIO_ROUTE /;"	d
GPIO_STATUS	gpio.h	/^} GPIO_STATUS;$/;"	t	typeref:enum:__anon0048884a0203
SET_1BITS	gpio.h	/^#define SET_1BITS(/;"	d
SPIDEV0_0	spi.h	/^    SPIDEV0_0,$/;"	e	enum:__anon105f31870103
SPIDEV0_1	spi.h	/^    SPIDEV0_1,$/;"	e	enum:__anon105f31870103
SPIDEV1_0	spi.h	/^    SPIDEV1_0,$/;"	e	enum:__anon105f31870103
SPIDEV1_1	spi.h	/^    SPIDEV1_1,$/;"	e	enum:__anon105f31870103
SPIDEV_MAX	spi.h	/^    SPIDEV_MAX,$/;"	e	enum:__anon105f31870103
SPI_BUS_NUM	spi.h	/^#define SPI_BUS_NUM /;"	d
SPI_CS	spi.h	/^}SPI_CS;$/;"	t	typeref:enum:__anon105f31870203
SPI_CS0	spi.h	/^    SPI_CS0,$/;"	e	enum:__anon105f31870203
SPI_CS1	spi.h	/^    SPI_CS1,$/;"	e	enum:__anon105f31870203
SPI_INDEX	spi.h	/^}SPI_INDEX;$/;"	t	typeref:enum:__anon105f31870103
SPI_ROUTE	spi.h	/^#define SPI_ROUTE /;"	d
__GPIO__	gpio.h	/^#define __GPIO__$/;"	d
__SPI__	spi.h	/^#define __SPI__$/;"	d
__anon0048884a0103	gpio.h	/^{$/;"	g
__anon0048884a0203	gpio.h	/^{$/;"	g
__anon0048884a0308	gpio.h	/^{$/;"	s
__anon105f31870103	spi.h	/^{$/;"	g
__anon105f31870203	spi.h	/^{$/;"	g
__anon105f31870308	spi.h	/^{$/;"	s
all	Makefile	/^all:$/;"	t
attribute	gpio.h	/^    int attribute; \/* gpio attribute like GPIO_V2_LINE_FLAG_OUTPUT or GPIO_V2_LINE_FLAG_INPUT*\/$/;"	m	struct:__anon0048884a0308	typeref:typename:int
bit	spi.h	/^    uint8_t bit;$/;"	m	struct:__anon105f31870308	typeref:typename:uint8_t
chip	gpio.h	/^    int chip;$/;"	m	struct:__anon0048884a0308	typeref:typename:int
fd	spi.h	/^    int fd;$/;"	m	struct:__anon105f31870308	typeref:typename:int
gpio	gpio.c	/^gpio_pin_t gpio[GPIO_PIN_MAX];$/;"	v	typeref:typename:gpio_pin_t[]
gpio_init	gpio.c	/^void gpio_init()$/;"	f	typeref:typename:void
gpio_pin_init	gpio.c	/^static int gpio_pin_init(GPIO_PIN_NAME data_index)$/;"	f	typeref:typename:int	file:
gpio_pin_t	gpio.h	/^} gpio_pin_t;$/;"	t	typeref:struct:__anon0048884a0308
gpio_read	gpio.c	/^int gpio_read(GPIO_PIN_NAME data_index, int *gpio_val)$/;"	f	typeref:typename:int
gpio_struct_init	gpio.c	/^static void gpio_struct_init()$/;"	f	typeref:typename:void	file:
gpio_write	gpio.c	/^int gpio_write(GPIO_PIN_NAME data_index, int gpio_val)$/;"	f	typeref:typename:int
line	gpio.h	/^    int line;$/;"	m	struct:__anon0048884a0308	typeref:typename:int
lsb	spi.h	/^    uint8_t lsb;$/;"	m	struct:__anon105f31870308	typeref:typename:uint8_t
main	main.c	/^int main()$/;"	f	typeref:typename:int
mode	spi.h	/^    uint8_t mode;$/;"	m	struct:__anon105f31870308	typeref:typename:uint8_t
printr	gpio.h	/^#define printr(/;"	d
req_fd	gpio.h	/^    int req_fd;$/;"	m	struct:__anon0048884a0308	typeref:typename:int
sem	gpio.h	/^    sem_t sem;$/;"	m	struct:__anon0048884a0308	typeref:typename:sem_t
sem	spi.h	/^    sem_t *sem;$/;"	m	struct:__anon105f31870308	typeref:typename:sem_t *
speed	spi.h	/^    uint32_t speed;$/;"	m	struct:__anon105f31870308	typeref:typename:uint32_t
spi	spi.c	/^spi_sturct_t spi[SPIDEV_MAX];$/;"	v	typeref:typename:spi_sturct_t[]
spi_full_duplex_read_write	spi.c	/^int spi_full_duplex_read_write(SPI_INDEX data_index, void *trx_buffer, size_t buffer_size)$/;"	f	typeref:typename:int
spi_half_duplex_read	spi.c	/^int spi_half_duplex_read(SPI_INDEX data_index, void *buffer, size_t buffer_size)$/;"	f	typeref:typename:int
spi_half_duplex_write	spi.c	/^int spi_half_duplex_write(SPI_INDEX data_index, void *buffer, size_t buffer_size)$/;"	f	typeref:typename:int
spi_init	spi.c	/^int spi_init(SPI_INDEX data_index)$/;"	f	typeref:typename:int
spi_init_struct	spi.c	/^static void spi_init_struct(SPI_INDEX data_index)$/;"	f	typeref:typename:void	file:
spi_route	spi.h	/^    char *spi_route;$/;"	m	struct:__anon105f31870308	typeref:typename:char *
spi_sem	spi.c	/^sem_t spi_sem[SPI_BUS_NUM];$/;"	v	typeref:typename:sem_t[]
spi_sturct_t	spi.h	/^}spi_sturct_t;$/;"	t	typeref:struct:__anon105f31870308
